{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChildRefComponent } from './child-ref.component';\nimport { ChildQuoteComponent } from './child-quote.component';\nimport { CommonModule } from '@angular/common';\nlet AppComponent = class AppComponent {\n  quoteNew = \"\";\n  linkNew = \"\";\n  linkTextNew = \"\";\n  quotesComp; ///check later///////////\n  refComp;\n  addQ() {\n    if (this.quoteNew) {\n      console.log('Добавление цитаты:', this.quoteNew);\n      this.quotesComp.addQuote(this.quoteNew); // Добавляем новую цитату в существующий массив\n      this.quoteNew = ''; // Очищаем поле ввода\n    }\n  }\n  addL() {\n    if (this.linkNew && this.linkTextNew) {\n      this.refComp.addLink({\n        url: this.linkNew,\n        text: this.linkTextNew\n      });\n      this.linkNew = ''; // Очищаем поля ввода\n      this.linkTextNew = '';\n    }\n  }\n};\n__decorate([ViewChild(ChildQuoteComponent)], AppComponent.prototype, \"quotesComp\", void 0);\n__decorate([ViewChild(ChildRefComponent)], AppComponent.prototype, \"refComp\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'my-app',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}